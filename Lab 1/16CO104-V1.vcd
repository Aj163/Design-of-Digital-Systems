$date
	Thu Sep 21 16:54:59 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Output $end
$var wire 5 ! o [0:4] $end
$var reg 4 " a [0:3] $end
$var reg 4 # b [0:3] $end
$scope module x $end
$var wire 4 $ a [0:3] $end
$var wire 4 % b [0:3] $end
$var wire 1 & c1 $end
$var wire 1 ' c2 $end
$var wire 1 ( c3 $end
$var wire 1 ) g0 $end
$var wire 1 * g1 $end
$var wire 1 + g2 $end
$var wire 1 , g3 $end
$var wire 5 - o [0:4] $end
$var wire 1 . p0 $end
$var wire 1 / p1 $end
$var wire 1 0 p2 $end
$var wire 1 1 p3 $end
$var wire 1 2 t1 $end
$var wire 1 3 t2 $end
$var wire 1 4 t3 $end
$scope module x15 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 ) G $end
$var wire 1 . P $end
$upscope $end
$scope module x16 $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 * G $end
$var wire 1 / P $end
$upscope $end
$scope module x17 $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 + G $end
$var wire 1 0 P $end
$upscope $end
$scope module x18 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 , G $end
$var wire 1 1 P $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
b0 -
0,
0+
0*
0)
0(
0'
0&
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#100000
b1110 !
b1110 -
11
1)
1&
10
16
1<
15
19
b1001 #
b1001 %
b101 "
b101 $
#200000
1(
13
1'
1.
b10001 !
b10001 -
0)
0&
1*
18
05
17
b1011 #
b1011 %
b110 "
b110 $
#300000
03
00
1+
0.
b11110 !
b11110 -
1)
1&
01
1,
1:
15
1;
b1111 #
b1111 %
b1111 "
b1111 $
#400000
